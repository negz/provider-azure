
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: aksclusterclasses.compute.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.azure.crossplane.io
  names:
    kind: AKSClusterClass
    listKind: AKSClusterClassList
    plural: aksclusterclasses
    singular: aksclusterclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An AKSClusterClass is a non-portable resource class. It defines
        the desired spec of resource claims that use it to dynamically provision a
        managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            AKSCluster.
          properties:
            disableRBAC:
              description: DisableRBAC determines whether RBAC will be disabled or
                enabled in the cluster.
              type: boolean
            dnsNamePrefix:
              description: DNSNamePrefix is the DNS name prefix to use with the hosted
                Kubernetes API server FQDN. You will use this to connect to the Kubernetes
                API when managing containers after creating the cluster.
              type: string
            location:
              description: Location is the Azure location that the cluster will be
                created in
              type: string
            nodeCount:
              description: NodeCount is the number of nodes that the cluster will
                initially be created with.  This can be scaled over time and defaults
                to 1.
              maximum: 100
              minimum: 0
              type: integer
            nodeVMSize:
              description: NodeVMSize is the name of the worker node VM size, e.g.,
                Standard_B2s, Standard_F2s_v2, etc.
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to external resources
                when managed resources dynamically provisioned using this resource
                class are deleted. "Delete" deletes the external resource, while "Retain"
                (the default) does not. Note this behaviour is subtly different from
                other uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            resourceGroupName:
              description: ResourceGroupName is the name of the resource group that
                the cluster will be created in
              type: string
            version:
              description: Version is the Kubernetes version that will be deployed
                to the cluster
              type: string
            vnetSubnetID:
              description: VnetSubnetID is the subnet to which the cluster will be
                deployed.
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
            writeServicePrincipalTo:
              description: WriteServicePrincipalSecretTo the specified Secret. The
                service principal is automatically generated and used by the AKS cluster
                to interact with other Azure resources.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - location
          - providerRef
          - resourceGroupName
          - version
          - writeConnectionSecretsToNamespace
          - writeServicePrincipalTo
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
