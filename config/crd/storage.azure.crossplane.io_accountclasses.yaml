
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: accountclasses.storage.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.azure.crossplane.io
  names:
    kind: AccountClass
    listKind: AccountClassList
    plural: accountclasses
    singular: accountclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An AccountClass is a non-portable resource class. It defines the
        desired spec of resource claims that use it to dynamically provision a managed
        resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            Account.
          properties:
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to external resources
                when managed resources dynamically provisioned using this resource
                class are deleted. "Delete" deletes the external resource, while "Retain"
                (the default) does not. Note this behaviour is subtly different from
                other uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            resourceGroupName:
              description: ResourceGroupName specifies the resource group for this
                Account.
              type: string
            storageAccountName:
              description: StorageAccountName specifies the name for this Account.
              maxLength: 24
              type: string
            storageAccountSpec:
              description: StorageAccountSpec specifies the desired state of this
                Account.
              properties:
                identity:
                  description: Identity - The identity of the resource.
                  properties:
                    principalId:
                      description: PrincipalID - The principal ID of resource identity.
                      type: string
                    tenantId:
                      description: TenantID - The tenant ID of resource.
                      type: string
                    type:
                      description: Type - The identity type.
                      type: string
                  type: object
                kind:
                  description: 'Kind - Indicates the type of storage account. Possible
                    values include: ''Storage'', ''BlobStorage'''
                  enum:
                  - Storage
                  - BlobStorage
                  type: string
                location:
                  description: Location - The location of the resource. This will
                    be one of the supported and registered Azure Geo Regions (e.g.
                    West US, East US, Southeast Asia, etc.).
                  type: string
                properties:
                  description: StorageAccountSpecProperties - The parameters used
                    to create the storage account.
                  properties:
                    accessTier:
                      description: 'AccessTier - Required for storage accounts where
                        kind = BlobStorage. The access tier used for billing. Possible
                        values include: ''Hot'', ''Cool'''
                      enum:
                      - Hot
                      - Cool
                      type: string
                    customDomain:
                      description: CustomDomain - User domain assigned to the storage
                        account. Name is the CNAME source. Only one custom domain
                        is supported per storage account at this time. to clear the
                        existing custom domain, use an empty string for the custom
                        domain name property.
                      properties:
                        name:
                          description: Name - custom domain name assigned to the storage
                            account. Name is the CNAME source.
                          type: string
                        useSubDomainName:
                          description: UseSubDomainName - Indicates whether indirect
                            CNAME validation is enabled.
                          type: boolean
                      type: object
                    encryption:
                      description: Encryption - Provides the encryption settings on
                        the account. If left unspecified the account encryption settings
                        will remain the same. The default setting is unencrypted.
                      properties:
                        keySource:
                          description: "KeySource - The encryption keySource (provider).
                            \n Possible values (case-insensitive):  Microsoft.Storage,
                            Microsoft.Keyvault"
                          enum:
                          - Microsoft.Storage
                          - Microsoft.Keyvault
                          type: string
                        keyvaultproperties:
                          description: KeyVaultProperties - Properties provided by
                            key vault.
                          properties:
                            keyname:
                              description: KeyName - The name of KeyVault key.
                              type: string
                            keyvaulturi:
                              description: KeyVaultURI - The Uri of KeyVault.
                              type: string
                            keyversion:
                              description: KeyVersion - The version of KeyVault key.
                              type: string
                          type: object
                        services:
                          description: Services - List of services which support encryption.
                          properties:
                            blob:
                              description: Blob - The encryption function of the blob
                                storage service.
                              type: boolean
                            file:
                              description: File - The encryption function of the file
                                storage service.
                              type: boolean
                            queue:
                              description: Queue - The encryption function of the
                                queue storage service.
                              type: boolean
                            table:
                              description: Table - The encryption function of the
                                table storage service.
                              type: boolean
                          type: object
                      type: object
                    networkAcls:
                      description: NetworkRuleSet - Network rule set
                      properties:
                        bypass:
                          description: 'Bypass - Specifies whether traffic is bypassed
                            for Logging/Metrics/AzureServices. Possible values are
                            any combination of Logging|Metrics|AzureServices (For
                            example, "Logging, Metrics"), or None to bypass none of
                            those traffics. Possible values include: ''None'', ''Logging'',
                            ''Metrics'', ''AzureServices'''
                          type: string
                        defaultAction:
                          description: "DefaultAction - Specifies the default action
                            of allow or deny when no other rules match. \n Possible
                            values include: 'Allow', 'Deny'"
                          enum:
                          - Allow
                          - Deny
                          type: string
                        ipRules:
                          description: IPRules - Sets the IP ACL rules
                          items:
                            description: IPRule IP rule with specific IP or IP range
                              in CIDR format.
                            properties:
                              action:
                                description: 'Action - The action of IP ACL rule.
                                  Possible values include: ''Allow'''
                                enum:
                                - Allow
                                type: string
                              value:
                                description: IPAddressOrRange - Specifies the IP or
                                  IP range in CIDR format. Only IPV4 address is allowed.
                                type: string
                            type: object
                          type: array
                        virtualNetworkRules:
                          description: VirtualNetworkRules - Sets the virtual network
                            rules
                          items:
                            description: VirtualNetworkRule virtual Network rule.
                            properties:
                              action:
                                description: 'Action - The action of virtual network
                                  rule. Possible values include: ''Allow'''
                                enum:
                                - Allow
                                type: string
                              id:
                                description: 'VirtualNetworkResourceID - Resource
                                  ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
                                type: string
                            type: object
                          type: array
                      type: object
                    supportsHttpsTrafficOnly:
                      description: EnableHTTPSTrafficOnly - Allows https traffic only
                        to storage service if sets to true.
                      type: boolean
                  type: object
                sku:
                  description: Sku of the storage account.
                  properties:
                    capabilities:
                      description: Capabilities - The capability information in the
                        specified sku, including file encryption, network acls, change
                        notification, etc.
                      items:
                        description: skuCapability the capability information in the
                          specified sku, including file encryption, network acls,
                          change notification, etc.
                        properties:
                          name:
                            description: Name - The name of capability, The capability
                              information in the specified sku, including file encryption,
                              network acls, change notification, etc.
                            type: string
                          value:
                            description: Value - A string value to indicate states
                              of given capability. Possibly 'true' or 'false'.
                            enum:
                            - true
                            - false
                            type: string
                        type: object
                      type: array
                    kind:
                      description: "Kind - Indicates the type of storage account.
                        \n Possible values include: 'Storage', 'BlobStorage'"
                      enum:
                      - Storage
                      - BlobStorage
                      type: string
                    locations:
                      description: Locations - The set of locations that the Sku is
                        available. This will be supported and registered Azure Geo
                        Regions (e.g. West US, East US, Southeast Asia, etc.).
                      items:
                        type: string
                      type: array
                    name:
                      description: "Name - Gets or sets the sku name. Required for
                        account creation; optional for update. Note that in older
                        versions, sku name was called accountType. \n Possible values
                        include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS',
                        'Standard_ZRS', 'Premium_LRS'"
                      enum:
                      - Standard_LRS
                      - Standard_GRS
                      - Standard_RAGRS
                      - Standard_ZRS
                      - Premium_LRS
                      type: string
                    resourceType:
                      description: ResourceType - The type of the resource, usually
                        it is 'storageAccounts'.
                      type: string
                    tier:
                      description: "Tier - Gets the sku tier. This is based on the
                        Sku name. \n Possible values include: 'Standard', 'Premium'"
                      enum:
                      - Standard
                      - Premium
                      type: string
                  required:
                  - name
                  type: object
                tags:
                  additionalProperties:
                    type: string
                  description: Tags - A list of key value pairs that describe the
                    resource. These tags can be used for viewing and grouping this
                    resource (across resource groups). A maximum of 15 tags can be
                    provided for a resource. Each tag must have a key with a length
                    no greater than 128 characters and a value with a length no greater
                    than 256 characters.
                  type: object
              required:
              - kind
              - location
              - sku
              type: object
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - providerRef
          - resourceGroupName
          - storageAccountName
          - storageAccountSpec
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
